<!doctype html>
{%- liquid
  assign rtl_langs = 'ar,arc,dv,fa,ha,he,khw,ks,ku,ps,ur,yi' | split: ','
  assign current_lang = localization.language.iso_code | split: '-' | first
  if rtl_langs contains current_lang
    assign lang_dir = 'rtl'
  else
    assign lang_dir = 'ltr'
  endif
-%}
<html lang="{{ request.locale.iso_code }}" dir="{{ lang_dir }}">

<style>
.navigation .navigation__tier-1 > .navigation__item > a[href="/collections/outlet"] {
    color: #FF0000 !important;
    font-weight: bold;
}
</style>
  
  <head>
<!-- Start of Shoplift scripts -->
{% render 'shoplift' %}
<!-- End of Shoplift scripts -->


    {% render 'hreflang', canonical_url: canonical_url %}
    
    <!-- Symmetry 6.0.0 -->

    <title>
      {{ page_title }}
      {% if current_tags -%}
        {%- assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}
      {%- endif %}
      {% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}
      {% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless %}
    </title>

    {% render 'head-tag' %}

    <!-- Google Tag Manager -->
    <script>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : '';
        j.async = true;
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, 'script', 'dataLayer', 'GTM-NKBDM6L');
    </script>
    <!-- End Google Tag Manager -->

    {%- liquid
      assign base_font = settings.type_base_font
      assign base_font_bold = base_font | font_modify: 'weight', 'bolder'
      assign base_font_medium = base_font | font_modify: 'weight', '500'
      assign base_font_italic = base_font | font_modify: 'style', 'italic'
      assign base_font_bold_italic = base_font_bold | font_modify: 'style', 'italic'
      assign heading_font = settings.type_heading_font
      assign logo_font = settings.type_logo_font
      assign nav_font = settings.type_nav_font
      assign nav_font_600 = nav_font | font_modify: 'weight', '600'
    -%}

    <style>
      {{ base_font | font_face: font_display: 'fallback' }}
      {{ base_font_bold | font_face: font_display: 'fallback' }}
      {{ base_font_medium | font_face: font_display: 'fallback' }}
      {{ base_font_italic | font_face: font_display: 'fallback' }}
      {{ base_font_bold_italic | font_face: font_display: 'fallback' }}
      {{ heading_font | font_face: font_display: 'fallback' }}
      {{ logo_font | font_face: font_display: 'fallback' }}
      {{ nav_font | font_face: font_display: 'fallback' }}
      {{ nav_font_600 | font_face: font_display: 'fallback' }}
    </style>

    {% render 'social-meta-tags' %}

    {{ 'styles.css' | asset_url | stylesheet_tag: preload: true }}

    {%- if settings.custom_theme_css != blank -%}
      {{ 'custom.css' | asset_url | stylesheet_tag: preload: true }}
    {%- endif -%}

    {%- if settings.swatch_enabled and settings.swatch_value_list != blank -%}
      <link rel="stylesheet" href="{{ 'swatches.css' | asset_url }}" media="print" onload="this.media='all'">
      <noscript><link rel="stylesheet" href="{{ 'swatches.css' | asset_url }}"></noscript>
    {%- endif -%}

    <script>
      window.theme = window.theme || {};
      theme.money_format_with_product_code_preference = {% if settings.product_currency_code_enabled %}{{ shop.money_with_currency_format | json }}{% else %}{{ shop.money_format | json }}{% endif %};
      theme.money_format_with_cart_code_preference = {% if settings.cart_currency_code_enabled %}{{ shop.money_with_currency_format | json }}{% else %}{{ shop.money_format | json }}{% endif %};
      theme.money_format = {{ shop.money_format | json }};
      theme.strings = {
        previous: {{ 'general.accessibility_labels.previous' | t | json }},
        next: {{ 'general.accessibility_labels.next' | t | json }},
        addressError: {{ 'map.errors.address_error' | t | json }},
        addressNoResults: {{ 'map.errors.address_no_results' | t | json }},
        addressQueryLimit: {{ 'map.errors.address_query_limit_html' | t | json }},
        authError: {{ 'map.errors.auth_error' | t | json }},
        icon_labels_left: {{ 'general.icon_labels.left' | t | escape | json }},
        icon_labels_right: {{ 'general.icon_labels.right' | t | escape | json }},
        icon_labels_down: {{ 'general.icon_labels.down' | t | escape | json }},
        icon_labels_close: {{ 'general.icon_labels.close' | t | escape | json }},
        icon_labels_plus: {{ 'general.icon_labels.plus' | t | escape | json }},
        imageSlider: {{ 'general.slider.images' | t | json }},
        cart_terms_confirmation: {{ 'cart.terms.confirmation' | t | json }},
        cart_general_quantity_too_high: {{ 'cart.general.quantity_too_high' | t: quantity: '[QUANTITY]' | json }},
        products_listing_from: {{ 'products.listing.from' | t | json }},
        layout_live_search_see_all: {{ 'layout.live_search.see_all' | t | json }},
        products_product_add_to_cart: {{ 'products.product.add_to_cart' | t | json }},
        products_variant_no_stock: {{ 'products.variant.no_stock' | t | json }},
        products_variant_non_existent: {{ 'products.variant.non_existent' | t | json }},
        products_product_pick_a: {{ 'products.product.pick_a' | t | json }},
        general_navigation_menu_toggle_aria_label: {{ 'general.navigation.menu_toggle_aria_label' | t | json }},
        general_accessibility_labels_close: {{ 'general.accessibility_labels.close' | t | json }},
        products_product_added_to_cart: {{ 'products.product.added_to_cart' | t | json }},
        general_quick_search_pages: {{ 'general.quick_search.pages' | t | json }},
        general_quick_search_no_results: {{ 'general.quick_search.no_results' | t | json }},
        collections_general_see_all_subcollections: {{ 'collections.general.see_all_subcollections' | t | json }}
      };
      theme.routes = {
        cart_url: '{{ routes.cart_url }}',
        cart_add_url: '{{ routes.cart_add_url }}.js',
        cart_update_url: '{{ routes.cart_update_url }}.js',
        predictive_search_url: '{{ routes.predictive_search_url }}'
      };
      theme.settings = {
        cart_type: {{ settings.cart_type | json }},
        after_add_to_cart: {{ settings.after_add_to_cart | json }},
        quickbuy_style: {{ settings.quickbuy_style | json }},
        avoid_orphans: {{ settings.avoid_orphans | json }}
      };
      document.documentElement.classList.add('js');
    </script>
    <!-- custom link of the jquery cdn of the 16-08-2023 -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <!-- end custom link of the jquery cdn of the 16-08-2023 -->
    <script src="{{ 'vendor.min.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'theme.js' | asset_url }}" defer="defer"></script>

    {% if template.name == 'product' and settings.prod_thumb_url_within_coll == false %}
      <script src="{{ 'collectionBreadcrumbs.js' | asset_url }}" async></script>
    {% endif %}

    {{ content_for_header }}

    <style>
    .navigation__item--with-mega-menu:focus-within .navigation__tier-2-container, a.navigation__tier-2-container:focus-visible + div.navigation__tier-2-container {
      visibility: visible;
      opacity: 1;
    }
    </style>
  </head>

<script src="https://widget.reviews.io/rating-snippet/dist.js"></script>
<link rel="stylesheet" href="https://widget.reviews.io/rating-snippet/dist.css"/>
<script>
ratingSnippet("ruk_rating_snippet", {
  store: "opposuits.com-9d25632",
  mode: "default",
  color: "#FF6B00",
  linebreak: false,
  text: "Reviews",
  singularText: "Review",
  lang: "en",
  usePolaris: false,
  showEmptyStars: false,
});
</script>
  
  <body
    class="
      template-{{ template | split: '.' | first | handle }}
      {%- if template.suffix %} template-suffix-{{ template.suffix }}{% endif -%}
      {%- if settings.swatch_enabled %} swatch-method-{{ settings.swatch_method }} swatch-style-{{ settings.swatch_style }}{% endif -%}
    "
    data-cc-animate-timeout="0"
  >
    <!-- Google Tag Manager (noscript) -->
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-NKBDM6L"
        height="0"
        width="0"
        style="display:none;visibility:hidden"
      ></iframe
    ></noscript>
    <!-- End Google Tag Manager (noscript) -->
    {%- if settings.animations_enabled_desktop -%}
      <script>
        if ('IntersectionObserver' in window) {
          document.body.classList.add('cc-animate-enabled');
        }
      </script>
    {%- endif -%}

    <a class="skip-link visually-hidden" href="#content">{{ 'general.accessibility_labels.skip_to_content' | t }}</a>

    {% unless template.name == 'cart' or settings.cart_type == 'page' %}{% section 'cart-drawer' %}{% endunless %}
    {% section 'announcement-bar' %}
    {% section 'header' %}
    {% section 'store-messages' %}

    <main id="content" role="main">
      <div class="container cf">
        {{ content_for_layout }}
      </div>
      <!-- /.container -->
    </main>
    <!-- /#content -->

<script src="https://widget.reviews.io/rating-snippet/dist.js"></script>
<link rel="stylesheet" href="https://widget.reviews.io/rating-snippet/dist.css"/>
<script>
ratingSnippet("ruk_rating_snippet", {
  store: "opposuits.com-9d25632",
  mode: "default",
  color: "#FF6B00",
  linebreak: false,
  text: "Reviews",
  singularText: "Review",
  lang: "en",
  usePolaris: false,
  showEmptyStars: false,
});
</script>
    
    {%- if request.path != '/challenge' -%}
      <div id="pagefooter">
        {% section 'cross-page-promos' %}
        {% section 'footer' %}
      </div>

      {% section 'popup' %}
    {%- endif -%}

    {%- if settings.after_add_to_cart == 'notification' -%}
      <template id="AddedNotification">
        <added-notification class="added-notification added-notification--hidden">
          <div class="added-notification__message-area">
            <div class="added-notification__message-title"></div>
            <div class="added-notification__message-text underline-child">
              {{ 'products.product.added_to_cart_with_link_html' | t: cart_url: routes.cart_url }}
            </div>
          </div>
          <div class="added-notification__button-area">
            <button
              type="button"
              class="added-notification__close notabutton"
              aria-label="{{ 'general.accessibility_labels.close' | t | escape }}"
            >
              {%- render 'svg-x' -%}
            </button>
          </div>
        </added-notification>
      </template>
    {%- endif -%}

    {%- if template.name == 'index' -%}
      {%- render 'velstar-homepage-schema' -%}
    {%- endif -%}


  <script>
  const focusableElements =
                  'button, a, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])';
  
              function trapFocus(selector) {
                  const modal = document.querySelector(selector); // select the modal by it's CSS selector
                  const firstFocusableElement = modal.querySelectorAll(focusableElements)[0]; // get first element to be focused inside modal
                  const focusableContent = modal.querySelectorAll(focusableElements);
                  const lastFocusableElement = focusableContent[focusableContent.length - 1]; // get last element to be focused inside modal
                  document.addEventListener('keydown', function(e) {
                  let isTabPressed = e.key === 'Tab' || e.keyCode === 9;
  
                  if (!isTabPressed) {
                      return;
                  }
  
                  if (e.shiftKey) { // if shift key pressed for shift + tab combination
                      if (document.activeElement === firstFocusableElement) {
                      lastFocusableElement.focus(); // add focus for the last focusable element
                      e.preventDefault();
                      }
                  } else { // if tab key is pressed
                      if (document.activeElement === lastFocusableElement) { // if focused has reached to last focusable element then focus first focusable element after pressing tab
                      firstFocusableElement.focus(); // add focus for the first focusable element
                      e.preventDefault();
                      }
                  }
                  });
  
                  firstFocusableElement.focus();
              }

  function keyToClick(event) {
                  if (event.key == "Enter") {
                      event.preventDefault();
                      event.target.click();
                  }
              }

  const leftNavAll = document.querySelectorAll(".navigation--left .navigation__item--with-children a[aria-expanded]");
  
  leftNavAll.forEach((e, i) => {
      let selector;
  
      if (e.parentElement.classList.contains('navigation__item--with-mega-menu')) {
          selector = ".navigation--main .navigation__item--with-mega-menu";
      } else {
          selector = ".navigation--main .navigation__item--with-small-menu";
      }
      e.addEventListener('focus', () => {
          const cont = document.querySelector("#" + e.getAttribute('aria-controls')).parentElement;
          const links = cont.querySelectorAll(".navigation__tier-2-container a");
          const first = links[0];
          const last = links[links.length - 1];
  
          cont.classList.add("navigation__item--show-children");
          e.addEventListener('keydown', (ev) => {
              if (ev.key == "Tab") {
                  if (ev.shiftKey) {
                      cont.classList.remove("navigation__item--show-children")
                  } else {
                      ev.preventDefault();
                      cont.querySelector(".navigation__tier-2 a").focus()
                  }
              }
          })
  
          first.addEventListener("keydown", (ev) => {
              if (ev.key == "Tab" && ev.shiftKey) {
                  ev.preventDefault();
                  cont.classList.remove("navigation__item--show-children");
                  e.focus();
              }
          })
  
          last.addEventListener("keydown", (ev) => {
              if (ev.key == "Tab" && !ev.shiftKey) {
                  ev.preventDefault();
                  cont.classList.remove("navigation__item--show-children");
                  if (i === (leftNavAll.length - 1)) {
                      document.querySelector("a.logo__link").focus();
                  } else {
                      leftNavAll[i + 1].focus();
                  }
              }
          })
      })
  })

  setTimeout(() => {  
    let slickTrack = document.querySelectorAll(".slick-track div")
      if (slickTrack) {
        for (let i = 0; i < slickTrack.length; i++) {
          slickTrack[i].removeAttribute("aria-hidden")
        }
      }

    let slickDots = document.querySelectorAll(".slick-dots li")
      if (slickDots) {
        for (let i = 0; i < slickDots.length; i++) {
          slickDots[i].removeAttribute("aria-hidden")
        }
      } 
  }, 1250)
  </script>
    
  </body>

  <script src="https://a.klaviyo.com/media/js/onsite/onsite.js"></script>
<script>
    var klaviyo = klaviyo || [];
    klaviyo.init({
      account: "TNUVLT",
      platform: "shopify"
    });
    klaviyo.enable("backinstock",{ 
    trigger: {
      product_page_text: "Notify Me When Available",
      product_page_class: "button.button--large",
      product_page_text_align: "center",
      product_page_margin: "0px",
      alternate_anchor: "Symmetry-AddToCart",
      replace_anchor: false
    },
    modal: {
     headline: "{product_name}",
     body_content: "Register to receive a notification when this item comes back in stock.",
     email_field_label: "Email",
     button_label: "Notify me when available",
     subscription_success_label: "You're in! We'll let you know when it's back.",
     footer_content: '',
     font_family: '"Montserrat";', 
     headers_font_family:  '"Montserrat";',
     additional_styles: "@import url('https://fonts.googleapis.com/css?family=Montserrat');", 
     drop_background_color: "#000",
     background_color: "#fff",
     text_color: "#222",
     button_text_color: "#fff",
     button_background_color: "#4C30FF",
     close_button_color: "#ccc",
     error_background_color: "#fcd6d7",
     error_text_color: "#C72E2F",
     success_background_color: "#d3efcd",
     success_text_color: "#1B9500"
    }
  });
</script>
</html>

